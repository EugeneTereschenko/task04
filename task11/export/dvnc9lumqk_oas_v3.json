{
  "openapi": "3.0.1",
  "info": {
    "title": "task11_api",
    "version": "2024-05-16T21:03:17Z"
  },
  "servers": [
    {
      "url": "https://dvnc9lumqk.execute-api.eu-central-1.amazonaws.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "paths": {
    "/reservations": {
      "get": {
        "description": "List reservations",
        "summary": "List all available reservations",
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          },
          "401": {
            "description": "Unauthorized request"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      },
      "post": {
        "description": "Save new reservation",
        "summary": "Save new reservation if slot is available",
        "requestBody": {
          "description": "Save new reservation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reservation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationId"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          },
          "401": {
            "description": "Unauthorized request"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      },
      "options": {
        "description": "Check path",
        "summary": "Check path for availability",
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/tables": {
      "get": {
        "description": "List tables",
        "summary": "List all available tables",
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          },
          "401": {
            "description": "Unauthorized request"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      },
      "post": {
        "description": "Save new table",
        "summary": "Save new table with defined fields",
        "requestBody": {
          "description": "Create new table",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Table"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableId"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          },
          "401": {
            "description": "Unauthorized request"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      },
      "options": {
        "description": "Check path",
        "summary": "Check path for availability",
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/signin": {
      "post": {
        "description": "Sign in User",
        "summary": "Sign in User using email and password",
        "requestBody": {
          "description": "Sign in for existing User",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      },
      "options": {
        "description": "Check path",
        "summary": "Check path for availability",
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/signup": {
      "post": {
        "description": "Sign up User",
        "summary": "Sign up new User with additional info",
        "requestBody": {
          "description": "Sign up for new User",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      },
      "options": {
        "description": "Check path",
        "summary": "Check path for availability",
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/tables/{tableId}": {
      "get": {
        "description": "Get table info",
        "summary": "Get all information about specific table",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          },
          "401": {
            "description": "Unauthorized request"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      },
      "options": {
        "description": "Check path",
        "summary": "Check path for availability",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Empty": {
        "title": "Empty Schema",
        "type": "object"
      },
      "TableId": {
        "description": "A simple ID response",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 10,
            "description": "Unique ID"
          }
        }
      },
      "TableList": {
        "description": "List of Tables",
        "type": "object",
        "properties": {
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Table"
            }
          }
        }
      },
      "Table": {
        "description": "A simple table object",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 10,
            "description": "Unique ID"
          },
          "number": {
            "type": "integer",
            "example": 10,
            "description": "number of the table"
          },
          "places": {
            "type": "integer",
            "example": 10,
            "description": "amount of people to sit at the table"
          },
          "isVip": {
            "type": "boolean",
            "example": true,
            "description": "is the table in the VIP hall"
          },
          "minOrder": {
            "type": "integer",
            "example": 10,
            "description": "table deposit required to book it"
          }
        }
      },
      "SignUp": {
        "description": "A simple Sign up object",
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John",
            "description": "First name"
          },
          "lastName": {
            "type": "string",
            "example": "Smith",
            "description": "Last name"
          },
          "email": {
            "type": "string",
            "example": "john@example.com",
            "description": "Valid email"
          },
          "password": {
            "type": "string",
            "example": "twso-123_ASD*sfU",
            "description": "Valid 12+ chars password"
          }
        }
      },
      "SignIn": {
        "description": "A simple Sign in object",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@example.com",
            "description": "Valid email"
          },
          "password": {
            "type": "string",
            "example": "twso-123_ASD*sfU",
            "description": "Valid 12+ chars password"
          }
        }
      },
      "AccessToken": {
        "description": "A simple Access token object",
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJraWQiOiJDOVwvc2RmT2JtdUd6a011cjBpNTNLU09pczh6VTlsS1prZjVVSUpJSGlsWT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJiMzE0ZDg4Mi0yMGMxLTcwZTUtYWZkYi00ZGVmNzhmZDkwZTQiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC5ldS1jZW50cmFsLTEuYW1hem9uYXdzLmNvbVwvZXUtY2VudHJhbC0xX1B5YlQxRWw2WCIsImNvZ25pdG86dXNlcm5hbWUiOiJ0ZXN0QHRlc3QuY29tIiwib3JpZ2luX2p0aSI6ImVmMTMzYjhjLTk3M2MtNDUzMy1hMjlmLWMwZmM0Y2QzYzE1NSIsImF1ZCI6IjM2NG1lN2x0cmJ1bmRoc2UzYjk2ZmVtZDJsIiwiZXZlbnRfaWQiOiIwY2E0MmQ1ZS1kZDdiLTRkZWMtOTBkMi01YzFlNjEyNGNlYTkiLCJ0b2tlbl91c2UiOiJpZCIsImF1dGhfdGltZSI6MTcxNjIxMDUwNSwiZXhwIjoxNzE2MjE0MTA1LCJpYXQiOjE3MTYyMTA1MDUsImp0aSI6ImEzYzY3N2VjLTY5ZjgtNGFkNS1hMTJjLTA0YWRmM2QzMDFmNyIsImVtYWlsIjoidGVzdEB0ZXN0LmNvbSJ9.e-t3tCFgt4i6_Ig4znK8pZpicdqTKzDwnLfN85tkWg7rZYpEtisfIy6PDajK4sHdrUMzYhVFNz7GAoV_31vf3Zr0UZDDTZ8i3BBf9wB3ksonCmfmHRchRmG68UL3ADXFqP0ujXtRJO7HTwMK17VK3uGhB3xy--q76hykJGXcBAX9rCuxQrsPHQRN9tNGVWcKydQO9RKExZt3qCF0KD_7yxW9UQJx295Gr8SyGVtFgEoX-txmvA24plT7pKo664Zcb2FgyRcH4n7bFdaPRHoGufSoy67W_9_GqV8DIgny9lF-YiFy5OaTuU8Fws9iIs4BpMOqu-vI6nB6qfpkrsOrFA",
            "description": "Access token to use in Authorization header (don't forget to add Bearer in front)"
          }
        }
      },
      "ReservationList": {
        "description": "List of Reservations",
        "type": "object",
        "properties": {
          "reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reservation"
            }
          }
        }
      },
      "Reservation": {
        "description": "A simple Reservation object",
        "type": "object",
        "properties": {
          "tableNumber": {
            "type": "integer",
            "example": 10,
            "description": "Table number"
          },
          "clientName": {
            "type": "string",
            "example": "John Smith",
            "description": "Client full name"
          },
          "phoneNumber": {
            "type": "string",
            "example": "+812345678",
            "description": "Client phone number"
          },
          "date": {
            "type": "string",
            "example": "2024-12-31",
            "description": "Date of reservation in yyyy-MM-dd format"
          },
          "slotTimeStart": {
            "type": "string",
            "example": "13:00",
            "description": "Slot time start in HH:MM format"
          },
          "slotTimeEnd": {
            "type": "string",
            "example": "13:00",
            "description": "Slot time end in HH:MM format"
          }
        }
      },
      "ReservationId": {
        "description": "A simple Reservation id object",
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string",
            "example": "970e5034-201f-446a-a2ae-3a2c72d9c049",
            "description": "Reservation id"
          }
        }
      }
    },
    "securitySchemes": {
      "authorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "x-syndicate-cognito-userpool-names": [
            "simple-booking-userpool"
          ],
          "type": "cognito_user_pools"
        }
      }
    }
  }
}